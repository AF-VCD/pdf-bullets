{"version":3,"sources":["const/const.js","components/Bullets/utils.js","components/Bullets/Bullet.js","components/Bullets/BulletComparator.js","components/Toolbars/Toolbars.js","static/abbrs.xlsx","components/Abbreviation/AbbreviationTable.js","components/Abbreviation/AbbreviationViewer.js","components/Toolbars/Thesaurus.js","const/defaults.js","BulletApp.js","serviceWorker.js","index.js"],"names":["STATUS","Forms","all","AF707","fields","likelyWidth","AF1206","AF910","AF911","tokenize","sentence","split","renderBulletText","text","getWidth","width","match","console","error","fullWidth","trimEnd","textLines","lines","overflow","textSplit","answerIdx","i","length","slice","join","recursedText","warn","recursedResult","avgCharWidth","guessIndex","parseInt","firstGuessWidth","substring","Bullet","widthPx","enableOptim","height","onHighlight","canvasRef","useRef","useState","outputTextLines","setOutputTextLines","color","setColor","loading","setLoading","optimStatus","setOptimStatus","rendering","setBulletRendering","widthPxAdjusted","getTextWidth","txt","canvas","context","getContext","font","textAlign","measureText","useEffect","current","optimResults","evalFcn","optWords","initResults","seed","max","prevResults","finalResults","newSpace","finalOptimStatus","worstCaseResults","status","indexToReplace","Math","floor","abs","str","hash","charCodeAt","hashCode","splice","newResults","optimize","ref","style","visibility","position","top","left","minHeight","display","flexDirection","onMouseUp","map","line","whiteSpace","BulletComparator","editorState","setEditorState","onSelect","abbrReplacer","bulletOutputID","Map","heightMap","setHeightMap","newHeightMap","getCurrentContent","getBlockMap","keys","key","blockDiv","document","querySelector","set","getBoundingClientRect","className","onChange","newEditorState","selectedText","getSelectionInfo","handleKeyCommand","command","newState","RichUtils","stripPastedStyles","id","event","selection","window","getSelection","toString","onKeyDown","e","ctrlKey","keyCode","preventDefault","target","RegExp","range","createRange","selectNode","removeAllRanges","addRange","tabIndex","Array","from","getText","DPI","get","selectionState","anchorKey","getAnchorKey","contentBlock","getBlockForKey","start","getStartOffset","end","getEndOffset","pdfjs","require","pdfjsWorker","GlobalWorkerOptions","workerSrc","ImportTools","props","importFile","fileInputRef","value","callback","file","log","state","type","getDataFromPDF","getDataFromJSON","files","inputClick","importType","setState","click","filedata","pdfSetup","arrayBuffer","then","buffer","uint8Array","Uint8Array","getDocument","data","promise","getXFA","pdf","getFormName","getMetadata","result","info","Custom","getAllData","Promise","pullBullets","results","formName","datasetXML","replace","xmlDoc","DOMParser","parseFromString","bulletText","tagName","innerHTML","getPageInfo","templateXML","fonts","fontSizes","widths","bulletTag","getAttribute","fontSize","getBulletsFromPdf","textUpdater","onTextUpdate","widthUpdater","onWidthUpdate","bulletsHTML","pageData","parseFloat","bullets","documentElement","textContent","reader","FileReader","onload","JSON","parse","onJSONImport","readAsText","hoverOut","hovering","toggleMenu","createRef","menuState","this","onClick","aria-haspopup","aria-controls","icon","faAngleDown","role","onMouseLeave","href","PureComponent","OutputTools","widthAWD","widthEPR","widthOPR","min","step","onWidthChange","onOptimChange","InputTools","onTextNorm","SaveTools","onSave","settings","storedData","stringify","localStorage","setItem","err","name","alert","onExport","dataURI","encodeURIComponent","exportRef","download","Logo","ThesaurusTools","onHide","DocumentTools","aria-label","onThesaurusHide","tableSettings","columns","disableVisualSelection","stretchH","autoWrapRow","maxRows","Infinity","manualRowResize","manualColumnResize","rowHeaders","colHeaders","trimWhitespace","enterBeginsEditing","manualRowMove","manualColumnMove","columnSorting","indicator","autoColumnSize","minRows","contextMenu","licenseKey","AbbreviationTable","setData","tableRef","afterChange","payload","source","newData","hotInstance","getData","row","enabled","abbr","getDataFromXLS","workbook","XLSX","read","raw","rows","utils","sheet_to_json","Sheets","SheetNames","header","readAsBinaryString","AbbrToolbar","wb","book_new","sht","json_to_sheet","book_append_sheet","writeFile","exportToXLS","confirm","res","xhttp","XMLHttpRequest","responseType","response","open","SampleAbbrFile","send","AbbreviationViewer","handleCardClick","word","This","onSelReplace","SynonymViewer","getSynonyms","phrase","onreadystatechange","readyState","dat","responseText","synonyms","item","hidden","prevProps","mainBody","replacedWord","otherAbbrs","abbrDict","onMouseDown","faPlus","size","explanation","noResults","SynonymList","Synonym","mainAbbrDisp","fontWeight","enabledAbbrDisp","disabledAbbrDisp","enabledAbbrs","filter","fontStyle","disabled","disabledAbbrs","defaultAbbrData","defaultEditorState","EditorState","createWithContent","ContentState","createFromText","BulletApp","setEnableOptim","setWidth","abbrData","setAbbrData","setAbbrDict","setSelection","currentTab","setCurrentTab","showThesaurus","setShowThesaurus","handleJSONImport","settingsArray","isArray","fromJS","getItem","newAbbrDict","forEach","fullWord","String","push","useCallback","finalAbbrDict","Object","abbrs","allApprovedAbbrs","string","regExp","p1","p2","p3","handleThesaurusHide","tabContents","newSel","trim","newWidth","selectionsToReplace","contentState","block","regex","matchArr","exec","index","findWithRegex","anchorOffset","focusOffset","SelectionState","createEmpty","merge","newContentState","reverse","Modifier","replaceText","newText","getPlainText","toJS","activeElement","trailingSpaces","newEnd","newSelectionState","newContent","newEditorStateSelect","forceSelection","tab","newTab","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","WebFont","load","custom","families","ReactDOM","render","getElementById","xh","DONE","count","Count","incrementVisitors","URL","process","origin","addEventListener","fetch","headers","contentType","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.ef44fe08.chunk.js","sourcesContent":["// optimization status codes\n// status codes for optimization direction\nexport const STATUS = {\n  OPTIMIZED: 0,\n  FAILED_OPT: 1,\n  NOT_OPT: -1,\n  MAX_UNDERFLOW: -4,\n};\n\n// could not do a static class property because of MS edge\nexport const Forms = {\n  all: {\n    AF707: {\n      fields: [\n        \"S2DutyTitleDesc\",\n        \"S4Assessment\",\n        \"S5Assessment\",\n        \"S6Assessment\",\n      ],\n      likelyWidth: \"201.041mm\",\n    },\n    AF1206: {\n      fields: [\"specificAccomplishments\", \"p2SpecificAccomplishments\"],\n      likelyWidth: \"202.321mm\",\n    },\n    AF910: {\n      fields: [\n        \"KeyDuties\",\n        \"IIIComments\",\n        \"IVComments\",\n        \"VComments\",\n        \"VIIIComments\",\n        \"IXComments\",\n      ],\n      likelyWidth: \"202.321mm\",\n    },\n    AF911: {\n      fields: [\n        \"KeyDuties\",\n        \"IIIComments\",\n        \"IVComments\",\n        \"VIIComments\",\n        \"VIIIComments\",\n        \"IXComments\",\n      ],\n      likelyWidth: \"202.321mm\",\n    },\n  },\n};\n","import { STATUS } from \"../../const/const\";\n\n/* \nstr: string\nreturn: number\n*/\nexport const hashCode = (str) => {\n  let hash = 0,\n    i,\n    chr;\n  if (str.length === 0) return hash;\n  for (i = 0; i < str.length; i++) {\n    chr = str.charCodeAt(i);\n    hash = (hash << 5) - hash + chr;\n    hash |= 0; // Convert to 32bit integer\n  }\n  return hash;\n};\n\n/*\nseed: string\nmax: number\nreturn: number\n*/\nexport const getRandomInt = (seed, max) => {\n  return Math.floor(\n    Math.abs((Math.floor(9 * hashCode(seed) + 5) % 100000) / 100000) *\n      Math.floor(max)\n  );\n};\n\nexport const tokenize = (sentence) => {\n  return sentence.split(/[\\s]+/);\n};\n\n/*\nsentence: string\nevalFcn: string to \n        results: {\n            textLines: string,\n            fullWidth: number,\n            lines: number,\n            overflow: number,\n        };\nreturn: {\n    status: STATUS\n    rendering: results\n}\n*/\nexport const optimize = (sentence, evalFcn) => {\n  const smallerSpace = \"\\u2006\";\n  const largerSpace = \"\\u2004\";\n\n  //initialization of optimized words array\n  let optWords = tokenize(sentence.trimEnd());\n\n  const initResults = evalFcn(sentence);\n\n  // good\n  if (initResults.overflow === 0) {\n    return initResults;\n  }\n\n  //initial instantiation of previousResults\n  let prevResults = initResults;\n  let finalResults = initResults;\n  const newSpace = initResults.overflow >= 0 ? smallerSpace : largerSpace;\n\n  let finalOptimStatus = STATUS.NOT_OPT;\n\n  // like in the while loop, want to not replace the first space after the dash.\n  const worstCaseResults = evalFcn(\n    optWords[0] + \" \" + optWords.slice(1).join(newSpace)\n  );\n\n  if (\n    (newSpace === smallerSpace && worstCaseResults.overflow > 0) ||\n    (newSpace === largerSpace &&\n      worstCaseResults.overflow < STATUS.MAX_UNDERFLOW)\n  ) {\n    // this means that there is no point in trying to optimize.\n\n    return {\n      status: STATUS.FAILED_OPT,\n      rendering: worstCaseResults,\n    };\n  }\n\n  while (\n    initResults.overflow > 0 ||\n    initResults.overflow < STATUS.MAX_UNDERFLOW\n  ) {\n    //don't select the first space after the dash- that would be noticeable and look wierd.\n    // also don't select the last word, don't want to add a space after that.\n    let indexToReplace =\n      getRandomInt(optWords.join(\"\"), optWords.length - 1 - 1) + 1;\n\n    //merges two elements together, joined by the space\n    optWords.splice(\n      indexToReplace,\n      2,\n      optWords.slice(indexToReplace, indexToReplace + 2).join(newSpace)\n    );\n\n    //make all other spaces the normal space size\n    let newSentence = optWords.join(\" \");\n\n    //console.log(newSentence.split(' '))\n    let newResults = evalFcn(newSentence);\n\n    if (initResults.overflow <= 0 && newResults.overflow > 0) {\n      //console.log(\"Note: Can't add more spaces without overflow, reverting to previous\" );\n      finalResults = prevResults;\n      finalOptimStatus = STATUS.OPTIMIZED;\n      break;\n    } else if (initResults.overflow > 0 && newResults.overflow < 0) {\n      //console.log(\"Removed enough spaces. Terminating.\" );\n      finalResults = newResults;\n      finalOptimStatus = STATUS.OPTIMIZED;\n      break;\n    }\n\n    prevResults = newResults;\n  }\n  return {\n    status: finalOptimStatus,\n    rendering: finalResults,\n  };\n};\n\n/*\ntext: string\ngetWidth: function: string to number\nwidth: string\nreturn: results: {\n            textLines: string,\n            fullWidth: number,\n            lines: number,\n            overflow: number,\n        };\n*/\n// all widths in this function are in pixels\nexport const renderBulletText = (text, getWidth, width) => {\n  // this function expects a single line of text with no line breaks.\n  if (text.match(\"\\n\")) {\n    console.error(\"renderBulletText expects a single line of text\");\n  }\n\n  const fullWidth = getWidth(text.trimEnd());\n  if (text === \"\") {\n    return {\n      textLines: [],\n      fullWidth: 0,\n      lines: 0,\n      overflow: 0 - width,\n    };\n  }\n  if (fullWidth < width) {\n    return {\n      textLines: [text],\n      fullWidth: fullWidth,\n      lines: 1,\n      overflow: fullWidth - width,\n    };\n  } else {\n    // Scenario where the width of the text is wider than desired.\n    //  In this case, work needs to be done to figure out where the line breaks should be.\n\n    // Regex- split after one of the following: \\u2004 \\u2009 \\u2006 \\s ? / | - % !\n    // but ONLY if immediately followed by: [a-zA-z] [0-9] + \\\n    const textSplit = text.split(\n      /(?<=[\\u2004\\u2009\\u2006\\s?/|\\-%!])(?=[a-zA-Z0-9+\\\\])/\n    );\n\n    // check to make sure the first token is smaller than the desired width.\n    //   This is usually true, unless the desired width is abnormally small, or the\n    //   input text is one really long word\n    if (getWidth(textSplit[0].trimEnd()) < width) {\n      let answerIdx = 0;\n      for (let i = 1; i <= textSplit.length; i++) {\n        const evalText = textSplit.slice(0, i).join(\"\").trimEnd();\n        const evalWidth = getWidth(evalText);\n        if (evalWidth > width) {\n          answerIdx = i - 1;\n          break;\n        }\n      }\n      const recursedText = textSplit\n        .slice(answerIdx, textSplit.length)\n        .join(\"\");\n\n      if (recursedText === text) {\n        console.warn(\"Can't fit \\\"\" + text + '\" on a single line\\n', {\n          text,\n          width,\n          fullWidth,\n        });\n        return {\n          textLines: [text],\n          fullWidth,\n          lines: 1,\n          overflow: fullWidth - width,\n        };\n      } else {\n        const recursedResult = renderBulletText(recursedText, getWidth, width);\n\n        return {\n          textLines: [\n            textSplit.slice(0, answerIdx).join(\"\"),\n            ...recursedResult.textLines,\n          ],\n          fullWidth: fullWidth,\n          lines: 1 + recursedResult.lines,\n          overflow: fullWidth - width,\n        };\n      }\n    } else {\n      // if the first token is wider than the desired width, a line break will need to be inserted somewhere in the token.\n      // Using binary search (I think) to find the correct spot for the line break.\n      const avgCharWidth = fullWidth / text.length;\n      const guessIndex = parseInt(width / avgCharWidth);\n      const firstGuessWidth = getWidth(text.substring(0, guessIndex));\n      let answerIdx = guessIndex;\n      if (firstGuessWidth > width) {\n        for (let i = guessIndex - 1; i > 0; i--) {\n          const nextGuessWidth = getWidth(text.substring(0, i));\n          if (nextGuessWidth < width) {\n            answerIdx = i;\n            break;\n          }\n        }\n      } else if (firstGuessWidth < width) {\n        for (let i = guessIndex; i <= text.length; i++) {\n          const nextGuessWidth = getWidth(text.substring(0, i));\n          if (nextGuessWidth > width) {\n            answerIdx = i - 1;\n            break;\n          }\n        }\n      }\n      const recursedText = text.substring(answerIdx, text.length);\n      if (recursedText === text) {\n        console.warn(\"Can't fit \\\"\" + text + '\" on a single line\\n', {\n          text,\n          width,\n          fullWidth,\n        });\n        return {\n          textLines: [text],\n          fullWidth,\n          lines: 1,\n          overflow: fullWidth - width,\n        };\n      } else {\n        const recursedResult = renderBulletText(recursedText, getWidth, width);\n\n        return {\n          textLines: [\n            text.substring(0, answerIdx),\n            ...recursedResult.textLines,\n          ],\n          fullWidth: fullWidth,\n          lines: 1 + recursedResult.lines,\n          overflow: fullWidth - width,\n        };\n      }\n    }\n  }\n};\n","import { useRef, useState, useEffect } from \"react\";\nimport { optimize, renderBulletText } from \"./utils\";\nimport { STATUS } from \"../../const/const\";\n\nfunction Bullet({\n  text = \"\",\n  widthPx = 500,\n  enableOptim = false,\n  height,\n  onHighlight,\n}) {\n  const canvasRef = useRef(null);\n  const [outputTextLines, setOutputTextLines] = useState(() => [\" \"]);\n\n  const [color, setColor] = useState(\"inherit\");\n  const [loading, setLoading] = useState(false);\n  const [optimStatus, setOptimStatus] = useState(STATUS.NOT_OPT);\n  const [rendering, setBulletRendering] = useState({ textLines: [\"\"] });\n  const widthPxAdjusted = widthPx + 0.55;\n\n  function getTextWidth(txt, canvas) {\n    const context = canvas.getContext(\"2d\");\n    context.font = \"12pt Times New Roman\";\n    context.textAlign = \"left\";\n    return context.measureText(txt).width;\n  }\n\n  // This effect updates the text rendering (i.e. enforces width constraints by inserting newlines)\n  //   whenever the props text input is updated.\n  useEffect(() => {\n    setBulletRendering(\n      renderBulletText(\n        text,\n        (txt) => getTextWidth(txt, canvasRef.current),\n        widthPxAdjusted\n      )\n    );\n  }, [text, widthPxAdjusted, enableOptim]);\n  // [] indicates that this happens once after the component mounts.\n  // [text] indicates that this happens every time the text changes from the user (from props)\n\n  // This effect happens after bullet rendering changes. It evaluates the rendered bullet and\n  //  sees how it can be improved with modified spaces.\n  useEffect(() => {\n    setLoading(true);\n    setOutputTextLines(rendering.textLines);\n    if (enableOptim) {\n      const optimizer = (txt) =>\n        renderBulletText(\n          txt,\n          (txt) => getTextWidth(txt, canvasRef.current),\n          widthPxAdjusted\n        );\n      const optimResults = optimize(text, optimizer);\n      setLoading(false);\n      setOptimStatus(optimResults.status);\n      setOutputTextLines(optimResults.rendering.textLines);\n    } else {\n      if (rendering.overflow < STATUS.MAX_UNDERFLOW || rendering.overflow > 0) {\n        setOptimStatus(STATUS.FAILED_OPT);\n      } else {\n        setOptimStatus(STATUS.OPTIMIZED);\n      }\n      setOutputTextLines(rendering.textLines);\n      setLoading(false);\n    }\n  }, [rendering, enableOptim, text, widthPxAdjusted]);\n\n  //color effect\n  useEffect(() => {\n    if (loading) {\n      setColor(\"silver\");\n    } else if (optimStatus === STATUS.FAILED_OPT) {\n      setColor(\"red\");\n    } else {\n      setColor(\"black\");\n    }\n  }, [loading, outputTextLines, optimStatus]);\n\n  // the style properties help lock the canvas in the same spot and make it essentially invisible.\n  //whitespace: pre-wrap is essential as it allows javascript string line breaks to appear properly.\n  return (\n    <>\n      <canvas\n        ref={canvasRef}\n        style={{\n          visibility: \"hidden\",\n          position: \"absolute\",\n          top: \"-1000px\",\n          left: \"-1000px\",\n        }}\n      />\n      <div\n        style={{\n          minHeight: height,\n          color: color,\n          display: \"flex\",\n          flexDirection: \"column\",\n        }}\n        onMouseUp={onHighlight}\n      >\n        {outputTextLines.map((line) => {\n          return (\n            <span key={line} style={{ whiteSpace: \"pre\" }}>\n              {line}\n            </span>\n          );\n        })}\n      </div>\n    </>\n  );\n  //return canvas;\n}\n\nexport default Bullet;\n","import { useState, useEffect } from \"react\";\nimport { Editor, RichUtils } from \"draft-js\";\nimport \"draft-js/dist/Draft.css\";\nimport Bullet from \"./Bullet\";\n\nconst DPI = 96;\nconst MM_PER_IN = 25.4;\nconst DPMM = DPI / MM_PER_IN;\n\nexport default function BulletComparator({\n  editorState,\n  setEditorState,\n  width,\n  onSelect,\n  abbrReplacer,\n  enableOptim,\n}) {\n  const bulletOutputID = \"bulletOutput\";\n  const [heightMap, setHeightMap] = useState(new Map());\n  // Editor callback that adds rich text editor keybinds\n  const handleKeyCommand = (command, editorState) => {\n    const newState = RichUtils.handleKeyCommand(editorState, command);\n    if (newState) {\n      setEditorState(newState);\n      return \"handled\";\n    }\n    return \"not-handled\";\n  };\n\n  // Editor callback that runs whenever edits or selection changes occur.\n  const onChange = (newEditorState) => {\n    //const content = editorState.getCurrentContent();\n    // ordered map has a key and a block associasted with it\n    //const blockMap = content.getBlockMap();\n    /*\n        for(let [key,block] of blockMap){\n            console.log(block.getText());\n        }\n        */\n    const { selectedText } = getSelectionInfo(newEditorState);\n    if (onSelect && selectedText !== \"\") onSelect(selectedText);\n\n    setEditorState(newEditorState);\n  };\n\n  // This other bullet selection is for when things are selected on the optimized output\n  const onBulletSelect = (event) => {\n    const selection = window.getSelection().toString();\n    if (selection !== \"\") {\n      onSelect(selection);\n    }\n  };\n\n  // control-a selectability on bullet outputs\n  function selectOutput(e) {\n    if (e.ctrlKey && e.keyCode === 65) {\n      e.preventDefault();\n      //console.log('control-a')\n      //console.log(this.outputRef.current)\n      if (e.target.id.match(new RegExp(bulletOutputID))) {\n        const range = document.createRange();\n        range.selectNode(e.target);\n        window.getSelection().removeAllRanges();\n        window.getSelection().addRange(range);\n      }\n    }\n  }\n\n  useEffect(() => {\n    let newHeightMap = new Map();\n    for (let key of editorState.getCurrentContent().getBlockMap().keys()) {\n      const blockDiv = document.querySelector(\n        `div[data-offset-key=\"${key}-0-0\"]`\n      );\n      if (blockDiv)\n        newHeightMap.set(key, blockDiv.getBoundingClientRect().height);\n    }\n    setHeightMap(newHeightMap);\n  }, [editorState]);\n\n  return (\n    <div className=\"bullets columns is-multiline\">\n      <div\n        className=\"column\"\n        style={\n          {\n            // width: width + 'mm',\n          }\n        }\n      >\n        <h2 className=\"subtitle\">Input Bullets Here:</h2>\n        <div className=\"border\" style={{ width: width + 1 + \"mm\" }}>\n          <Editor\n            editorState={editorState}\n            onChange={onChange}\n            handleKeyCommand={handleKeyCommand}\n            stripPastedStyles={true}\n          />\n        </div>\n      </div>\n      <div className=\"column\">\n        <h2 className=\"subtitle\">View Output Here:</h2>\n        <div\n          className=\"border\"\n          id={bulletOutputID}\n          style={{ width: width + 1 + \"mm\" }}\n          onMouseUp={onBulletSelect}\n          onKeyDown={selectOutput}\n          tabIndex=\"0\"\n        >\n          {Array.from(\n            editorState.getCurrentContent().getBlockMap(),\n            ([key, block]) => {\n              let text = block.getText();\n              if (abbrReplacer) text = abbrReplacer(text);\n\n              return (\n                <Bullet\n                  key={key}\n                  text={text}\n                  widthPx={width * DPMM}\n                  height={heightMap.get(key)}\n                  enableOptim={enableOptim}\n                />\n              );\n            }\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport const getSelectionInfo = (editorState) => {\n  // this block of code gets the selected text from the editor.\n  const selectionState = editorState.getSelection();\n  const anchorKey = selectionState.getAnchorKey();\n  const contentBlock = editorState\n    .getCurrentContent()\n    .getBlockForKey(anchorKey);\n  const start = selectionState.getStartOffset();\n  const end = selectionState.getEndOffset();\n  const selectedText = contentBlock.getText().slice(start, end);\n  return {\n    selectionState,\n    anchorKey,\n    contentBlock,\n    start,\n    end,\n    selectedText,\n  };\n};\n\nexport const findWithRegex = (regex, contentBlock, callback) => {\n  const text = contentBlock.getText();\n  let matchArr, start, end;\n  while ((matchArr = regex.exec(text)) !== null) {\n    start = matchArr.index;\n    end = start + matchArr[0].length;\n    callback(start, end);\n  }\n};\n","import { PureComponent, createRef } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faAngleDown } from \"@fortawesome/free-solid-svg-icons\";\nimport { Forms } from \"../../const/const.js\";\n\nconst pdfjs = require(\"@ckhordiasma/pdfjs-dist\");\nconst pdfjsWorker = require(\"@ckhordiasma/pdfjs-dist/build/pdf.worker.entry\");\npdfjs.GlobalWorkerOptions.workerSrc = pdfjsWorker;\n\n//PDF import\nclass ImportTools extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.fileInputRef = createRef();\n    this.state = {\n      type: \"none\",\n      hovering: false,\n    };\n  }\n\n  importFile = (e) => {\n    if (!this.fileInputRef.current.value) {\n      console.log(\"no file picked\");\n      return;\n    } else {\n      let callback = (file) => {\n        console.log(file);\n      };\n      if (this.state.type === \"PDF\") {\n        callback = this.getDataFromPDF;\n      } else if (this.state.type === \"JSON\") {\n        callback = this.getDataFromJSON;\n      }\n      //return Promise.resolve(this.fileInputRef.current.files[0]).then(callback).then(() => {\n      //    this.fileInputRef.current.value = ''});\n      callback(this.fileInputRef.current.files[0]);\n      this.fileInputRef.current.value = \"\";\n    }\n  };\n  inputClick = (importType) => {\n    return () => {\n      this.setState({\n        type: importType,\n      });\n      this.fileInputRef.current.click();\n    };\n  };\n  getDataFromPDF = (file) => {\n    const { pullBullets, getPageInfo } = getBulletsFromPdf(file);\n    //note: these promises are PDFJS promises, not ES promises\n\n    //was not able to call this (this.props.onTextUpdate) inside the \"then\" scope, so I const'ed them out\n    const textUpdater = this.props.onTextUpdate;\n    const widthUpdater = this.props.onWidthUpdate;\n\n    Promise.all([pullBullets, getPageInfo]).then(([bulletsHTML, pageData]) => {\n      widthUpdater(parseFloat(pageData.width))();\n\n      // This is needed to convert the bullets HTML into normal text. It gets rid of things like &amp;\n      const bullets = new DOMParser().parseFromString(bulletsHTML, \"text/html\")\n        .documentElement.textContent;\n      textUpdater(bullets)();\n    });\n  };\n  getDataFromJSON = (file) => {\n    const reader = new FileReader();\n    reader.onload = (e) => {\n      const data = JSON.parse(e.target.result);\n\n      this.props.onJSONImport(data);\n    };\n    reader.readAsText(file);\n  };\n\n  hoverOut = () => {\n    this.setState({ hovering: false });\n  };\n  toggleMenu = () => {\n    const current = this.state.hovering;\n    this.setState({ hovering: !current });\n  };\n  render() {\n    const menuState = this.state.hovering ? \"is-active\" : \"\";\n    return (\n      <div className={\"dropdown \" + menuState}>\n        <input\n          type=\"file\"\n          onChange={this.importFile}\n          style={{ display: \"none\" }}\n          ref={this.fileInputRef}\n        ></input>\n        <div className=\"dropdown-trigger\">\n          <div className=\"buttons has-addons\">\n            <button className=\"button\" onClick={this.inputClick(\"PDF\")}>\n              Import\n            </button>\n            <button\n              className=\"button\"\n              onClick={this.toggleMenu}\n              aria-haspopup=\"true\"\n              aria-controls=\"import-menu\"\n            >\n              <span className=\"icon\">\n                <FontAwesomeIcon icon={faAngleDown} />\n              </span>\n            </button>\n          </div>\n        </div>\n        <div\n          className=\"dropdown-menu\"\n          id=\"import-menu\"\n          role=\"menu\"\n          onMouseLeave={this.hoverOut}\n        >\n          <div className=\"dropdown-content\">\n            <a\n              href=\"?#\"\n              className=\"dropdown-item\"\n              onClick={this.inputClick(\"PDF\")}\n            >\n              PDF\n            </a>\n            <a\n              href=\"?#\"\n              className=\"dropdown-item\"\n              onClick={this.inputClick(\"JSON\")}\n            >\n              JSON\n            </a>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n// form width, space optimization, select text\nclass OutputTools extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  render() {\n    const widthAWD = 202.321;\n    const widthEPR = 202.321;\n    const widthOPR = 201.041;\n    return (\n      <div className=\"field is-grouped\">\n        {/* if I want to group things together in a field, each subelement must have the control class name */}\n        <div className=\"control field has-addons\">\n          <div className=\"control has-icons-right\">\n            <input\n              className=\"input\"\n              id=\"widthInput\"\n              type=\"number\"\n              min=\"100\"\n              max=\"500\"\n              step=\".001\"\n              value={this.props.width}\n              onChange={this.props.onWidthChange}\n            ></input>\n            <span className=\"icon is-right\">mm</span>\n          </div>\n          <div className=\"control buttons has-addons\">\n            <a\n              className={\n                \"button is-primary \" +\n                (this.props.width === widthAWD ? \"\" : \"is-outlined\")\n              }\n              onClick={this.props.onWidthUpdate(widthAWD)}\n            >\n              AWD\n            </a>\n            <a\n              className={\n                \"button is-success \" +\n                (this.props.width === widthEPR ? \"\" : \"is-outlined\")\n              }\n              onClick={this.props.onWidthUpdate(widthEPR)}\n            >\n              EPR\n            </a>\n            <a\n              className={\n                \"button is-link \" +\n                (this.props.width === widthOPR ? \"\" : \"is-outlined\")\n              }\n              onClick={this.props.onWidthUpdate(widthOPR)}\n            >\n              OPR\n            </a>\n          </div>\n        </div>\n\n        <a\n          className={\n            \"control button is-dark\" +\n            (this.props.enableOptim ? \"\" : \"is-outlined\")\n          }\n          onClick={this.props.onOptimChange}\n          id=\"enableOptim\"\n        >\n          Auto-Space\n        </a>\n      </div>\n    );\n  }\n}\n// normalize spaces\nclass InputTools extends PureComponent {\n  render() {\n    return (\n      <button className=\"button\" onClick={this.props.onTextNorm}>\n        Renormalize Input Spacing\n      </button>\n    );\n  }\n}\n// saving settings\nclass SaveTools extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.exportRef = createRef();\n    this.state = { hovering: false };\n  }\n  onSave = () => {\n    const settings = this.props.onSave();\n    //JSON stringifying an array for future growth\n    const storedData = JSON.stringify([settings]);\n    try {\n      localStorage.setItem(\"bullet-settings\", storedData);\n      console.log(\n        \"saved settings/data to local storage with character length \" +\n          storedData.length\n      );\n    } catch (err) {\n      if (err.name === \"SecurityError\") {\n        alert(\n          \"Sorry, saving to cookies does not work using the file:// interface and/or your browser's privacy settings\"\n        );\n      } else {\n        throw err;\n      }\n    }\n  };\n  onExport = () => {\n    const settings = this.props.onSave();\n    //JSON stringifying an array for future growth\n    const storedData = JSON.stringify([settings]);\n    const dataURI =\n      \"data:application/JSON;charset=utf-8,\" + encodeURIComponent(storedData);\n    this.exportRef.current.href = dataURI;\n    this.exportRef.current.click();\n    console.log(\n      \"exported settings/data to JSON file with character length \" +\n        storedData.length\n    );\n  };\n  hoverOut = () => {\n    this.setState({ hovering: false });\n  };\n  toggleMenu = () => {\n    const current = this.state.hovering;\n    this.setState({ hovering: !current });\n  };\n  render() {\n    const menuState = this.state.hovering ? \"is-active\" : \"\";\n    return (\n      <div className={\"dropdown \" + menuState}>\n        <div className=\"dropdown-trigger\">\n          <div className=\"buttons has-addons\">\n            <button className=\"button\" onClick={this.onSave}>\n              Save{\" \"}\n            </button>\n            <button\n              className=\"button\"\n              aria-haspopup=\"true\"\n              aria-controls=\"save-menu\"\n            >\n              <span className=\"icon\" onClick={this.toggleMenu}>\n                <FontAwesomeIcon icon={faAngleDown} />\n              </span>\n            </button>\n          </div>\n        </div>\n        <div\n          className=\"dropdown-menu\"\n          id=\"save-menu\"\n          role=\"menu\"\n          onMouseLeave={this.hoverOut}\n        >\n          <div className=\"dropdown-content\">\n            <a href=\"?#\" className=\"dropdown-item\" onClick={this.onSave}>\n              Cookie\n            </a>\n            <a href=\"?#\" className=\"dropdown-item\" onClick={this.onExport}>\n              JSON\n            </a>\n          </div>\n        </div>\n\n        <a\n          href=\"?#\"\n          style={{ display: \"none\" }}\n          download=\"settings.json\"\n          ref={this.exportRef}\n        ></a>\n      </div>\n    );\n  }\n}\nclass Logo extends PureComponent {\n  render() {\n    return (\n      <h1 className=\"title\">\n        <span className=\"logo\">AF </span>\n        <span className=\"logo\">Bull</span>et\n        <span className=\"logo\"> Sh</span>aping &amp;\n        <span className=\"logo\"> i</span>teration\n        <span className=\"logo\"> t</span>ool\n      </h1>\n    );\n  }\n}\nclass ThesaurusTools extends PureComponent {\n  render() {\n    return (\n      <a\n        className=\"button\"\n        onClick={this.props.onHide}\n        aria-haspopup=\"true\"\n        aria-controls=\"thesaurus-menu\"\n      >\n        <span>Thesaurus</span>\n        <span className=\"icon\">\n          <FontAwesomeIcon icon={faAngleDown} />\n        </span>\n      </a>\n    );\n  }\n}\nclass DocumentTools extends PureComponent {\n  render() {\n    return (\n      <nav className=\"navbar\" role=\"navigation\" aria-label=\"main navigation\">\n        <div className=\"navbar-start\">\n          <div className=\"navbar-item\">\n            <SaveTools onSave={this.props.onSave} />\n          </div>\n          <div className=\"navbar-item\">\n            <ImportTools\n              onJSONImport={this.props.onJSONImport}\n              onTextUpdate={this.props.onTextUpdate}\n              onWidthUpdate={this.props.onWidthUpdate}\n            />\n          </div>\n          <div className=\"navbar-item\">\n            <OutputTools\n              enableOptim={this.props.enableOptim}\n              onOptimChange={this.props.onOptimChange}\n              width={this.props.width}\n              onWidthChange={this.props.onWidthChange}\n              onWidthUpdate={this.props.onWidthUpdate}\n            />\n          </div>\n          <div className=\"navbar-item\">\n            <InputTools onTextNorm={this.props.onTextNorm} />\n          </div>\n          <div className=\"navbar-item\">\n            <ThesaurusTools onHide={this.props.onThesaurusHide} />\n          </div>\n        </div>\n      </nav>\n    );\n  }\n}\n\nfunction getBulletsFromPdf(filedata) {\n  const pdfSetup = filedata.arrayBuffer().then(function (buffer) {\n    const uint8Array = new Uint8Array(buffer);\n\n    return pdfjs.getDocument({ data: uint8Array }).promise;\n  });\n\n  const getXFA = pdfSetup.then(function (pdf) {\n    return pdf.getXFA();\n  });\n\n  const getFormName = pdfSetup.then(function (pdf) {\n    return pdf.getMetadata().then(function (result) {\n      const prefix = result.info.Custom[\"Short Title - Prefix\"];\n      const num = result.info.Custom[\"Short Title - Number\"];\n      return prefix + \"\" + num;\n    });\n  });\n  const getAllData = Promise.all([getFormName, getXFA]);\n  const pullBullets = getAllData.then(function (results) {\n    const formName = results[0];\n    const xfaDict = results[1];\n\n    let datasetXML = xfaDict[\"datasets\"];\n    datasetXML = datasetXML.replace(/&#xD;/g, \"\\n\");\n\n    const parser = new DOMParser();\n    const xmlDoc = parser.parseFromString(datasetXML, \"text/xml\");\n\n    let bulletText = \"\";\n    for (let tagName of Forms.all[formName][\"fields\"]) {\n      const bulletTag = xmlDoc.querySelector(tagName);\n      bulletText += bulletTag.innerHTML + \"\\n\";\n    }\n    return bulletText;\n  });\n\n  const getPageInfo = getAllData.then(function (results) {\n    const formName = results[0];\n    const xfaDict = results[1];\n\n    const templateXML = xfaDict[\"template\"];\n    const parser = new DOMParser();\n    const xmlDoc = parser.parseFromString(templateXML, \"text/xml\");\n\n    let fonts = [];\n    let fontSizes = [];\n    let widths = [];\n    let i = 0;\n    for (let tagName of Forms.all[formName][\"fields\"]) {\n      const bulletTag = xmlDoc.querySelector(\"field[name='\" + tagName + \"'\");\n      fonts[i] = bulletTag.querySelector(\"font\").getAttribute(\"typeface\");\n      fontSizes[i] = bulletTag.querySelector(\"font\").getAttribute(\"size\");\n      widths[i] = bulletTag.getAttribute(\"w\");\n      i += 1;\n    }\n    for (let font of fonts) {\n      if (font !== fonts[0]) {\n        console.log(\n          \"warning: not all grabbed sections have the same font type\"\n        );\n        break;\n      }\n    }\n    for (let fontSize of fontSizes) {\n      if (fontSize !== fontSizes[0]) {\n        console.log(\n          \"warning: not all grabbed sections have the same font size\"\n        );\n        break;\n      }\n    }\n    for (let width of widths) {\n      if (width !== widths[0]) {\n        console.log(\"warning: not all grabbed sections have the same width\");\n        break;\n      }\n    }\n\n    return { font: fonts[0], fontSize: fontSizes[0], width: widths[0] };\n\n    //accomplishmentsTag = templateXML.match(/name=\"specificAccomplishments\"(.*?)<\\/field/);\n    //console.log(accomplishmentsTag)\n  });\n  return { pullBullets, getPageInfo };\n}\n\nexport { Logo, DocumentTools };\n","export default __webpack_public_path__ + \"static/media/abbrs.ebd0e99b.xlsx\";","import { useRef } from \"react\";\nimport { HotTable } from \"@handsontable/react\";\nimport \"handsontable/dist/handsontable.full.css\";\n\nconst tableSettings = {\n  columns: [\n    {\n      data: \"enabled\",\n      type: \"checkbox\",\n      disableVisualSelection: true,\n      width: 20,\n    },\n    {\n      data: \"value\",\n      type: \"text\",\n    },\n    {\n      data: \"abbr\",\n      type: \"text\",\n    },\n  ],\n  stretchH: \"all\",\n  width: 500,\n  autoWrapRow: true,\n  height: 500,\n  maxRows: Infinity,\n  manualRowResize: true,\n  manualColumnResize: true,\n  rowHeaders: true,\n  colHeaders: [\"Enabled\", \"Word\", \"Abbreviation\"],\n  trimWhitespace: false,\n  enterBeginsEditing: false,\n  manualRowMove: true,\n  manualColumnMove: true,\n  columnSorting: {\n    indicator: true,\n  },\n  autoColumnSize: false,\n  minRows: 15,\n  contextMenu: true,\n  licenseKey: \"non-commercial-and-evaluation\",\n};\n\nfunction AbbreviationTable({ data, setData }) {\n  const tableRef = useRef(null);\n\n  const update = (payload, source) => {\n    //console.log({source, payload, tableRef: tableRef.current , data})\n    //console.log('update source: ', source)\n    if (source !== \"loadData\" && tableRef.current !== null) {\n      const rawData = tableRef.current.hotInstance.getData();\n      const newData = rawData.map((row) => {\n        return {\n          enabled: row[0],\n          value: row[1],\n          abbr: row[2],\n        };\n      });\n\n      setData(newData);\n    }\n  };\n\n  return (\n    <HotTable\n      {...tableSettings}\n      data={data}\n      ref={tableRef}\n      afterChange={update}\n    />\n  );\n}\n\nexport default AbbreviationTable;\n","import { createRef } from \"react\";\nimport XLSX from \"xlsx\";\nimport SampleAbbrFile from \"../../static/abbrs.xlsx\";\nimport AbbreviationTable from \"./AbbreviationTable.js\";\n\nexport const importSampleAbbrs = (callback) => {\n  return new Promise((res) => {\n    const xhttp = new XMLHttpRequest();\n    xhttp.responseType = \"blob\";\n    xhttp.onload = () => {\n      res(xhttp.response);\n    };\n    xhttp.open(\"GET\", SampleAbbrFile, true);\n    xhttp.send();\n  }).then(callback);\n};\n\nexport const getDataFromXLS = (file, callback) => {\n  const reader = new FileReader();\n  reader.onload = (e) => {\n    const data = e.target.result;\n    const workbook = XLSX.read(data, {\n      type: \"binary\",\n      raw: true,\n    });\n    const rows = XLSX.utils\n      .sheet_to_json(workbook.Sheets[workbook.SheetNames[0]], {\n        header: [\"enabled\", \"value\", \"abbr\"],\n      })\n      .map(({ enabled, value, abbr }) => {\n        return { enabled, value, abbr };\n      });\n\n    // checks first row, enabled value and see if it matches header text\n    // normally enabled is a boolean.\n    if (rows[0].enabled.toString().match(/enabled/i)) {\n      callback(rows.slice(1));\n    } else {\n      callback(rows);\n    }\n  };\n  reader.readAsBinaryString(file);\n};\n\nexport const exportToXLS = (data) => {\n  const wb = XLSX.utils.book_new();\n  const sht = XLSX.utils.json_to_sheet(data);\n  XLSX.utils.book_append_sheet(wb, sht, \"abbrs\");\n  XLSX.writeFile(wb, \"abbrs.xlsx\");\n};\n\nfunction AbbrToolbar({ data, setData, ...props }) {\n  const fileInputRef = createRef();\n\n  function importAbbrs(e) {\n    if (!fileInputRef.current.value) {\n      console.log(\"no file picked\");\n      return;\n    } else {\n      getDataFromXLS(fileInputRef.current.files[0]);\n      fileInputRef.current.value = \"\";\n    }\n  }\n\n  return (\n    <div className=\"toolbox\">\n      <input\n        type=\"file\"\n        onChange={importAbbrs}\n        ref={fileInputRef}\n        style={{ display: \"none\" }}\n      ></input>\n      <button className=\"button\" onClick={() => fileInputRef.current.click()}>\n        Import Abbrs\n      </button>\n      <button className=\"button\" onClick={() => exportToXLS(data)}>\n        Export Abbrs\n      </button>\n      <button\n        className=\"button\"\n        onClick={() => {\n          if (\n            window.confirm(\n              \"Are you sure you want to remove all existing acronyms and replace with a common list?\"\n            )\n          ) {\n            importSampleAbbrs((file) => getDataFromXLS(file, setData));\n          }\n        }}\n      >\n        Load Common Abbrs\n      </button>\n    </div>\n  );\n}\n\nfunction AbbreviationViewer({ data, setData }) {\n  return (\n    <div>\n      <AbbrToolbar setData={setData} data={data} />\n      <AbbreviationTable data={data} setData={setData} />\n    </div>\n  );\n}\n\nexport default AbbreviationViewer;\n","import { PureComponent } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons\";\n\nconst handleCardClick = (word, This) => {\n  return (e) => {\n    e.preventDefault();\n    This.props.onSelReplace(word);\n  };\n};\n\nclass SynonymViewer extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      synonyms: [],\n      hidden: true,\n    };\n  }\n  getSynonyms = (phrase) => {\n    const xhttp = new XMLHttpRequest();\n    xhttp.onreadystatechange = () => {\n      if (xhttp.readyState === 4 && xhttp.status === 200) {\n        const dat = JSON.parse(xhttp.responseText);\n\n        if (dat.length !== 0) {\n          this.setState({\n            synonyms: dat.map((item) => {\n              return item.word;\n            }),\n          });\n        } else {\n          this.setState({\n            synonyms: [],\n          });\n        }\n      }\n    };\n    const maxWords = 75;\n    xhttp.open(\n      \"GET\",\n      \"https://api.datamuse.com/words?max=\" + maxWords + \"&ml=\" + phrase,\n      true\n    );\n    xhttp.send();\n  };\n  componentDidMount() {\n    this.getSynonyms(this.props.word);\n  }\n  componentDidUpdate(prevProps) {\n    if (prevProps.word !== this.props.word) {\n      this.getSynonyms(this.props.word);\n    }\n  }\n\n  render() {\n    const replacedWord = this.props.abbrReplacer(this.props.word);\n    const otherAbbrs = this.props.abbrDict[this.props.word];\n    const header = (\n      <span className=\"tag is-medium\">\n        <Synonym\n          word={this.props.word}\n          key={this.props.word}\n          abbr={replacedWord === this.props.word ? \"\" : replacedWord}\n          otherAbbrs={otherAbbrs}\n        />\n        <a\n          className=\"icon is-small\"\n          onMouseDown={handleCardClick(this.props.word, this)}\n        >\n          <FontAwesomeIcon icon={faPlus} size=\"xs\" color=\"#51cf66\" />\n        </a>\n      </span>\n    );\n\n    const synonyms = (\n      <SynonymList\n        onSelReplace={this.props.onSelReplace}\n        key={this.state.synonyms.join(\"\")}\n        synonyms={this.state.synonyms}\n        abbrDict={this.props.abbrDict}\n        abbrReplacer={this.props.abbrReplacer}\n      />\n    );\n    const explanation = (\n      <span className=\"panel-block\" key=\"init\">\n        Auto-thesaurus box - highlight a word or phrase below to show synonyms\n        in this box\n      </span>\n    );\n    const noResults = (\n      <span className=\"panel-block\" key=\"none\">\n        no results found\n      </span>\n    );\n    let mainBody;\n    if (this.props.word === \"\") {\n      mainBody = explanation;\n    } else if (this.state.synonyms.length === 0) {\n      mainBody = noResults;\n    } else {\n      mainBody = synonyms;\n    }\n\n    return (\n      <div className=\"card\">\n        <header className=\"card-header has-background-light\tis-shadowless\">\n          <div className=\"card-header-title\">\n            <span>Thesaurus{this.props.word ? \":\" : \"\"}</span>\n            {this.props.word ? header : \"\"}\n          </div>\n          <a className=\"card-header-icon\" onClick={this.props.onHide}>\n            <span className=\"delete\"></span>\n          </a>\n        </header>\n        <div\n          className=\"card-content\"\n          style={{ height: \"290px\", overflow: \"auto\" }}\n        >\n          {mainBody}\n        </div>\n      </div>\n    );\n  }\n}\n\nclass SynonymList extends PureComponent {\n  handleCardClick = (word) => {\n    return (e) => {\n      e.preventDefault();\n      this.props.onSelReplace(word);\n    };\n  };\n  render() {\n    return (\n      <div>\n        <div className=\"tags are-medium \">\n          {this.props.synonyms.map((word, i) => {\n            const replacedWord = this.props.abbrReplacer(word);\n            const otherAbbrs = this.props.abbrDict[word];\n            return (\n              <span className=\"tag\" key={i}>\n                <Synonym\n                  word={word}\n                  abbr={replacedWord === word ? \"\" : replacedWord}\n                  otherAbbrs={otherAbbrs}\n                />\n                <a className=\"icon\" onMouseDown={handleCardClick(word, this)}>\n                  <FontAwesomeIcon icon={faPlus} size=\"xs\" color=\"#51cf66\" />\n                </a>\n              </span>\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n}\nclass Synonym extends PureComponent {\n  render() {\n    //don't forget! you need to add capability to check on disabled abbreviations\n    let mainAbbrDisp = \"\";\n    if (this.props.abbr) {\n      mainAbbrDisp = (\n        <span style={{ fontWeight: \"bold\" }}>\n          {\" (\" + this.props.abbr + \")\"}\n        </span>\n      );\n    }\n\n    let enabledAbbrDisp = \"\";\n    let disabledAbbrDisp = \"\";\n\n    if (this.props.otherAbbrs) {\n      if (this.props.otherAbbrs.enabled) {\n        let enabledAbbrs = this.props.otherAbbrs.enabled.filter((abbr) => {\n          return abbr !== this.props.abbr;\n        });\n        if (enabledAbbrs.length > 0) {\n          enabledAbbrDisp = (\n            <span style={{ fontStyle: \"italic\" }}>\n              {\" (\" + enabledAbbrs.join(\",\") + \")\"}\n            </span>\n          );\n        }\n      }\n\n      if (this.props.otherAbbrs.disabled) {\n        let disabledAbbrs = this.props.otherAbbrs.disabled;\n        if (disabledAbbrs.length > 0) {\n          disabledAbbrDisp = (\n            <span style={{ fontStyle: \"italic\" }}>\n              {\" (\" + disabledAbbrs.join(\",\") + \")\"}\n            </span>\n          );\n        }\n      }\n    }\n    return (\n      <span>\n        <span>{this.props.word}</span>\n        {mainAbbrDisp}\n        {enabledAbbrDisp}\n        {disabledAbbrDisp}\n      </span>\n    );\n  }\n}\nexport default SynonymViewer;\n","export const defaultText =\n  \"- This is a custom built bullet writing tool; abbreviations will be replaced according to table in the abbreviations tab--you will see output on the right\\n\\\n- This tool can optimize spacing; output will be red if the optimizer could not fix spacing with 2004 or 2006 Unicode spaces\\n\\\n- Click the thesaurus button to show one; select a word in this or the output box to view synonyms--words in parentheses are abbreviations that are configured\";\n\nexport const defaultWidth = 202.321;\nexport const defaultAbbrData = [\n  {\n    enabled: true,\n    value: \"abbreviations\",\n    abbr: \"abbrs\",\n  },\n  {\n    enabled: true,\n    value: \"table\",\n    abbr: \"tbl\",\n  },\n  {\n    enabled: true,\n    value: \"optimize\",\n    abbr: \"optim\",\n  },\n  {\n    enabled: true,\n    value: \"with \",\n    abbr: \"w/\",\n  },\n  {\n    enabled: true,\n    value: \"parentheses\",\n    abbr: \"parens\",\n  },\n];\n","import { useState, useEffect, useCallback } from \"react\";\nimport BulletComparator, {\n  getSelectionInfo,\n  findWithRegex,\n} from \"./components/Bullets/BulletComparator\";\nimport { Logo, DocumentTools } from \"./components/Toolbars/Toolbars\";\nimport { tokenize } from \"./components/Bullets/utils\";\nimport AbbreviationViewer from \"./components/Abbreviation/AbbreviationViewer\";\nimport SynonymViewer from \"./components/Toolbars/Thesaurus.js\";\nimport { EditorState, ContentState, Modifier, SelectionState } from \"draft-js\";\nimport { defaultAbbrData, defaultText, defaultWidth } from \"./const/defaults\";\n\nconst defaultEditorState = EditorState.createWithContent(\n  ContentState.createFromText(defaultText)\n);\n\n// Note that all width measurements in this file are in millimeters.\nfunction BulletApp() {\n  const [enableOptim, setEnableOptim] = useState(true);\n  const [width, setWidth] = useState(defaultWidth);\n  const [abbrData, setAbbrData] = useState(defaultAbbrData);\n\n  const [abbrDict, setAbbrDict] = useState({});\n\n  const [selection, setSelection] = useState(\"\");\n  const [currentTab, setCurrentTab] = useState(0);\n  const [showThesaurus, setShowThesaurus] = useState(false);\n  const [editorState, setEditorState] = useState(defaultEditorState);\n\n  function handleJSONImport(settingsArray) {\n    const settings = settingsArray[0]; //preparing for possible eventual several tabs of stuff\n    setEnableOptim(settings.enableOptim ?? enableOptim);\n\n    // for backwards compatibility\n    setWidth(parseFloat(settings.width ?? width));\n\n    // for backwards compatibility\n    if (Array.isArray(settings.abbrData[0])) {\n      setAbbrData(\n        settings.abbrData.map((row) => {\n          return {\n            enabled: row[0],\n            value: row[1],\n            abbr: row[2],\n          };\n        })\n      );\n    } else {\n      setAbbrData(settings.abbrData ?? abbrData);\n    }\n\n    setEditorState(\n      settings.editorState\n        ? EditorState.fromJS(settings.editorState)\n        : EditorState.createWithContent(\n            ContentState.createFromText(settings.text)\n          )\n    );\n  }\n\n  useEffect(() => {\n    let settingsArray;\n    try {\n      if (localStorage.getItem(\"bullet-settings\")) {\n        settingsArray = JSON.parse(localStorage.getItem(\"bullet-settings\"));\n        handleJSONImport(settingsArray);\n      }\n    } catch (err) {\n      if (err.name === \"SecurityError\") {\n        console.log(\n          \"Was not able to get localstorage bullets due to use of file interface and browser privacy settings\"\n        );\n      } else {\n        throw err;\n      }\n    }\n  }, []);\n\n  useEffect(() => {\n    const newAbbrDict = {};\n    abbrData\n      .filter((row) => row.value !== null && row.abbr !== null)\n      .forEach((row) => {\n        let fullWord = String(row.value).replace(/\\s/g, \" \");\n        let abbr = row.abbr;\n        let enabled = row.enabled;\n        newAbbrDict[fullWord] = newAbbrDict[fullWord] || []; //initializes to empty array if necessary\n\n        if (enabled) {\n          newAbbrDict[fullWord].enabled = newAbbrDict[fullWord].enabled || [];\n          newAbbrDict[fullWord].enabled.push(abbr);\n        } else {\n          newAbbrDict[fullWord].disabled = newAbbrDict[fullWord].disabled || [];\n          newAbbrDict[fullWord].disabled.push(abbr);\n        }\n      });\n\n    setAbbrDict(newAbbrDict);\n  }, [abbrData]);\n\n  const abbrReplacer = useCallback(\n    (sentence) => {\n      const finalAbbrDict = {};\n      Object.keys(abbrDict).forEach((word) => {\n        const abbrs = abbrDict[word]; //an array\n        //if there is at least one enabled abbreviation, take the lowest most element of it.\n        if (abbrs.enabled) {\n          finalAbbrDict[word] = abbrs.enabled[abbrs.enabled.length - 1];\n        }\n      });\n\n      // courtesy of https://stackoverflow.com/questions/3446170/escape-string-for-use-in-javascript-regex\n      function escapeRegExp(string) {\n        return string.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\"); // $& means the whole matched string\n      }\n\n      let modifiers = \"g\";\n      const allApprovedAbbrs = Object.keys(finalAbbrDict)\n        .map(escapeRegExp)\n        .join(\"|\");\n\n      // some info on the boundary parts of the regex:\n      // (^|\\\\W|\\\\b)\n      //     ^ - ensures words at the beginning of line are considered for abbreviation\n      //     \\\\W - expects abbr to be preceded by a non-word, i.e. a space, semicolon, dash, etc.\n      //     \\\\b - also check for word boundaries, this is necessary for edge cases like 'f/ ' and 'w/ '.\n      //            Otherwise things like 'with chicken' and 'for $2M' won't resolve to 'w/chicken' and 'f/$2M'.\n      // (\\\\W|\\\\b|$)\n      //     \\\\W, \\\\b - see above\n      //     $ - ensures words at end of line are considered for abbreviation\n      const regExp = new RegExp(\n        \"(^|\\\\W|\\\\b)(\" + allApprovedAbbrs + \")(\\\\W|\\\\b|$)\",\n        modifiers\n      );\n      const newSentence = sentence.replace(regExp, (match, p1, p2, p3) => {\n        //p2 = p2.replace(/ /g,'\\\\s')\n        let abbr = finalAbbrDict[p2];\n        if (!abbr) {\n          abbr = \"\";\n        }\n        return p1 + abbr + p3;\n      });\n      return newSentence;\n    },\n    [abbrDict]\n  );\n\n  function handleOptimChange() {\n    setEnableOptim(!enableOptim);\n  }\n  function handleSelect(newSel) {\n    const maxWords = 8;\n    if (newSel.trim() !== \"\") {\n      setSelection(tokenize(newSel.trim()).slice(0, maxWords).join(\" \"));\n    }\n  }\n\n  function handleWidthChange(e) {\n    setWidth(parseFloat(e.target.value));\n  }\n  function handleTextNorm() {\n    const selectionsToReplace = [];\n    const contentState = editorState.getCurrentContent();\n    contentState.getBlockMap().forEach((block, key) => {\n      findWithRegex(/\\s+/g, block, (anchorOffset, focusOffset) => {\n        const selection = SelectionState.createEmpty(key).merge({\n          anchorOffset,\n          focusOffset,\n        });\n        selectionsToReplace.push(selection);\n      });\n    });\n\n    let newContentState = contentState;\n    // need to reverse the selections list, because otherwise as the newContentState is iteratively changed,\n    //  subsequent selections will get shifted and get all jacked up. This problem can be avoided by going backwards.\n    selectionsToReplace.reverse().forEach((selection) => {\n      newContentState = Modifier.replaceText(newContentState, selection, \" \");\n    });\n\n    setEditorState(EditorState.createWithContent(newContentState));\n  }\n  function handleTextUpdate(newText) {\n    return () =>\n      setEditorState(\n        EditorState.createWithContent(ContentState.createFromText(newText))\n      );\n  }\n  function handleWidthUpdate(newWidth) {\n    return () => setWidth(newWidth);\n  }\n  function handleSave() {\n    return {\n      width: width,\n      text: editorState.getCurrentContent().getPlainText(\"\\n\"),\n      editorState: editorState.toJS(),\n      abbrData: abbrData,\n      enableOptim: enableOptim,\n    };\n  }\n  function handleTabChange(newTab) {\n    return () => setCurrentTab(newTab);\n  }\n  function handleThesaurusHide() {\n    setShowThesaurus(!showThesaurus);\n  }\n  function handleSelReplace(word) {\n    if (document.activeElement.className.match(/public-DraftEditor-content/)) {\n      const {\n        selectedText,\n        start,\n        anchorKey,\n        selectionState,\n      } = getSelectionInfo(editorState);\n\n      const trailingSpaces = selectedText.match(/\\s*$/)[0];\n      const newEnd = start + word.length + trailingSpaces.length;\n\n      const newSelectionState = SelectionState.createEmpty(anchorKey).merge({\n        anchorOffset: start,\n        focusOffset: newEnd,\n      });\n\n      const newContent = Modifier.replaceText(\n        editorState.getCurrentContent(),\n        selectionState,\n        word + trailingSpaces\n      );\n      const newEditorState = EditorState.push(\n        editorState,\n        newContent,\n        \"insert-characters\"\n      );\n      const newEditorStateSelect = EditorState.forceSelection(\n        newEditorState,\n        newSelectionState\n      );\n\n      setEditorState(newEditorStateSelect);\n    }\n  }\n\n  const tabs = [\"Bullets\", \"Abbreviations\"];\n  const tabContents = [\n    <BulletComparator\n      editorState={editorState}\n      setEditorState={setEditorState}\n      abbrReplacer={abbrReplacer}\n      width={width}\n      onSelect={handleSelect}\n      enableOptim={enableOptim}\n    />,\n    <AbbreviationViewer data={abbrData} setData={setAbbrData} />,\n  ];\n\n  return (\n    <div className=\"container is-fluid\">\n      <div className=\"columns is-multiline\">\n        <div className=\"column is-full\">\n          <Logo />\n          <DocumentTools\n            enableOptim={enableOptim}\n            onOptimChange={handleOptimChange}\n            width={width}\n            onWidthChange={handleWidthChange}\n            onWidthUpdate={handleWidthUpdate}\n            onTextNorm={handleTextNorm}\n            onTextUpdate={handleTextUpdate}\n            onSave={handleSave}\n            onJSONImport={handleJSONImport}\n            onThesaurusHide={handleThesaurusHide}\n          />\n        </div>\n\n        <div className={\"column is-full \" + (showThesaurus ? \"\" : \"is-hidden\")}>\n          <SynonymViewer\n            word={selection}\n            onSelReplace={handleSelReplace}\n            abbrDict={abbrDict}\n            abbrReplacer={abbrReplacer}\n            onHide={handleThesaurusHide}\n          />\n        </div>\n        <div className=\"column is-full\">\n          <div className=\"tabs\">\n            <ul>\n              {tabs.map((tab, i) => {\n                return (\n                  <li key={i} className={currentTab === i ? \"is-active\" : \"\"}>\n                    <a onClick={handleTabChange(i)}>{tab}</a>\n                  </li>\n                );\n              })}\n            </ul>\n          </div>\n        </div>\n        <div className=\"column is-full\">{tabContents[currentTab]}</div>\n      </div>\n    </div>\n  );\n}\n\nexport default BulletApp;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\n\n//import {Bullet, BulletComparator, Skeleton} from \"./components/bullets.js\"\nimport BulletApp from \"./BulletApp.js\"\n\nimport \"./styles/index.scss\"\nimport 'handsontable/dist/handsontable.full.css'\n\nimport * as serviceWorker from './serviceWorker';\nimport WebFont from 'webfontloader';\n\n\n\nWebFont.load({\n  custom: {\n    families: ['AdobeTimes']\n  }\n});\n\n\n\n\nReactDOM.render(\n  <>\n    <div className=\"section\" id=\"stuff\" >\n      <BulletApp  />\n    </div>\n    <div className=\"container\" id=\"footer\">\n      <div>If you have feedback, submit\n          an <a href='https://github.com/AF-VCD/pdf-bullets/issues'>issue</a>\n          or a <a href=\"https://github.com/AF-VCD/pdf-bullets/pulls\">pull request</a>\n      </div>\n      <div>This site utilizes PDF.JS (pdf import), react-table (spreadsheet), draft-js (editor), the DataMuse API (thesaurus), and Bulma (CSS).</div>\n      <div>This site has basic analytics to track the total number of visits to the page. See <a href=\"https://github.com/ckhordiasma/log-bullet-visitors\">here</a> for details</div>\n      <div>Maintained by Christopher Kodama </div>\n    </div>\n  </>\n  , document.getElementById('root'));\n\nincrementVisitors();\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n\nfunction incrementVisitors() {\n  // code for incrementing visitor count    \n  const xh = new XMLHttpRequest();\n  xh.onreadystatechange = () => {\n    if (xh.readyState === XMLHttpRequest.DONE) {\n      var status = xh.status;\n\n      // Not sure what status codes are acceptable.. using MDN successful responses and redirects range as a guide\n      if ((status >= 200 && status < 400)) {\n        // The request has been completed successfully\n        const count = JSON.parse(xh.response).Count;\n        console.log(\"The bullets site(s) have been visited \" + count + \" times in the last 7 days.\");\n\n      } else {\n        console.log(\"Visitor count increment: task failed successfully\");\n      }\n    }\n  }\n  xh.open(\"POST\", \"https://g5z50elklh.execute-api.us-east-2.amazonaws.com/default/LogVisitors\", true);\n  xh.send();\n}"],"sourceRoot":""}